//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EasyFreight.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OperationsEntities : DbContext
    {
        public OperationsEntities()
            : base("name=OperationsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CustomClearanceDetail> CustomClearanceDetails { get; set; }
        public virtual DbSet<HouseBill> HouseBills { get; set; }
        public virtual DbSet<OperationContainer> OperationContainers { get; set; }
        public virtual DbSet<Quotation> Quotations { get; set; }
        public virtual DbSet<QuotationContainer> QuotationContainers { get; set; }
        public virtual DbSet<OperationView> OperationViews { get; set; }
        public virtual DbSet<TruckingOrdersView> TruckingOrdersViews { get; set; }
        public virtual DbSet<QuotationView> QuotationViews { get; set; }
        public virtual DbSet<Operation> Operations { get; set; }
        public virtual DbSet<CustomClearanceOrder> CustomClearanceOrders { get; set; }
        public virtual DbSet<HouseBillView> HouseBillViews { get; set; }
        public virtual DbSet<CustomClearanceView> CustomClearanceViews { get; set; }
        public virtual DbSet<OperationCost> OperationCosts { get; set; }
        public virtual DbSet<OperationCostLib> OperationCostLibs { get; set; }
        public virtual DbSet<CurrencyOper> CurrencyOpers { get; set; }
        public virtual DbSet<CustomClearanceCostLib> CustomClearanceCostLibs { get; set; }
        public virtual DbSet<StatusLibOper> StatusLibOpers { get; set; }
    
        public virtual ObjectResult<GetContractorRate_Result> GetContractorRate(Nullable<bool> getValidOnly)
        {
            var getValidOnlyParameter = getValidOnly.HasValue ?
                new ObjectParameter("getValidOnly", getValidOnly) :
                new ObjectParameter("getValidOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContractorRate_Result>("GetContractorRate", getValidOnlyParameter);
        }
    
        public virtual ObjectResult<GetOperationStatistics_Result> GetOperationStatistics(Nullable<int> orderFrom, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var orderFromParameter = orderFrom.HasValue ?
                new ObjectParameter("OrderFrom", orderFrom) :
                new ObjectParameter("OrderFrom", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOperationStatistics_Result>("GetOperationStatistics", orderFromParameter, startDateParameter, endDateParameter);
        }
    }
}
