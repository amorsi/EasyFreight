//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EasyFreight.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ReportsAccountingEntities : DbContext
    {
        public ReportsAccountingEntities()
            : base("name=ReportsAccountingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<GetAccountSummaryByParentAccId_Result> GetAccountSummaryByParentAccId(string parentAccId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var parentAccIdParameter = parentAccId != null ?
                new ObjectParameter("ParentAccId", parentAccId) :
                new ObjectParameter("ParentAccId", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAccountSummaryByParentAccId_Result>("GetAccountSummaryByParentAccId", parentAccIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetAccountDetailsByAccId_Result> GetAccountDetailsByAccId(string accId, string fromDate, string toDate)
        {
            var accIdParameter = accId != null ?
                new ObjectParameter("AccId", accId) :
                new ObjectParameter("AccId", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAccountDetailsByAccId_Result>("GetAccountDetailsByAccId", accIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<AccRpt_TopViewBalance2_Result> AccRpt_TopViewBalance2(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AccRpt_TopViewBalance2_Result>("AccRpt_TopViewBalance2", fromDateParameter, toDateParameter);
        }
    }
}
